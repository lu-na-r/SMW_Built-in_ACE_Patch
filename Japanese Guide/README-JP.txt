SMW Built-in ACE Patchの使い方

倫葉

SMW Built-in ACE Patchをダウンロード頂きありがとうございます
このパッチは、マリオワールド内で任意のコードを好きなタイミングで実行できるようにする研究ツールです

以下の内容をよく読み、理解したうえでご使用ください


1. ファイル
SMW Built-in ACE Patchは以下のファイルから構成されています

    ・SMW_Built-in_ACE_Patch_JP.asm（日本版ROM用パッチ）
    ・SMW_Built-in_ACE_Patch_US（北米版ROM用パッチ）
    ・日本語と英語の説明用フォルダ
        a. README.txt 
        b. sample.txt 
        c. LICENSE.txt

なお、本パッチを使用するには日本版もしくは北米版のスーパーマリオワールドの編集されていないROMが必要です
ROMは各自で吸い出し機などを用いて用意してください


2. パッチの当て方
パッチの当て方（このツールを使用する方法）を説明します

    ・まずAsarをダウンロードする必要があります。このサイト（https://www.smwcentral.net/?p=section&a=details&id=25953）にアクセスし、zipファイルをダウンロードし、解凍してください
    ・asar.exeをSMW_Built-in_ACE_Patchのフォルダ内に移動してください
    ・ROMはヘッダが付いた.smcファイルである必要があります。不安な場合はこのサイト（https://emu.web-g-p.com/info/system/header_smc.html）にアクセスし、ヘッダを付加してください
    ・ROMの拡張子が.sfcの場合は.smcに変更してください
    ・ROMをフォルダSMW Built-in ACE Patchに置いてください（asar.exeと同じ階層）
    ・asar.exeを起動してください
    ・ROMが日本版の場合は、フォルダからSMW_Built-in_ACE_Patch_JP.asmをAsarのウィンドウにドラッグアンドドロップしてください
    ・ROMが北米版の場合は、フォルダからSMW_Built-in_ACE_Patch_US.asmをAsarのウィンドウにドラッグアンドドロップしてください
    ・Enterキーを押してください
    ・フォルダからROMファイルをAsarのウィンドウにドラッグアンドドロップしてください
    ・Enterキーを押してください
    ・完成です。フォルダ内に配置したROMが編集されています


3. 使い方
このツールの使い方を説明します

・Code Editorの開き方/閉じ方
    SMW Built-in ACE Patchには最大256Byteの命令を書き込めるCode Editorが搭載されています
    標準ではCode Editorは閉じられています
    Code EditorはSelectとRボタン（右スクロールで使うボタン）を同時に押すことで開くことができます
    Code EditorはSelectとLボタン（左スクロールで使うボタン）を同時に押すことで閉じることができます

・Code Editorの使い方
    Code Editorでは16進数を用いて最大256Byteの命令を書き込むことができます
    コードは左上から順番に書き込んでください
    十字キーでカーソルを移動させることができます。
    Rボタンで数値を1インクリメント、Lボタンで1デクリメントすることができます
    RボタンとLボタンを同時に押すことで、素早く数値を入力することができます
    SelectボタンとXボタンを同時に押すことで全ての命令を消去することができます

・コードを実行する方法
    Code Editorを閉じた状態でRボタンとLボタンを同時に押すと、書き込んだコードを実行できます
    実行時に音がならない場合は左上が$00になっていないか確認してください
    ボタンを押したときに音が鳴ればコードが実行されています

・その他
    Code Editorを使用したり任意コードを実行できるのはコース内かマップ上のみです
    また、ポーズ状態ではツールを使用することができません


4. 技術情報
内部処理について説明します。よくわからない方は飛ばしても大丈夫です

    ・このパッチではBRK（オペコード$00）を任意コードの終了判定に用いているため、BRKが正しく動作しません
    　BRKを正しく動作させるには、パッチのorg $00ffe6以下2バイトを消去するかコメントアウトしてください
    　この場合、書き込むコードの最後には必ずRTL（オペコード$6b）を付ける必要があります
    ・任意コードはUntouched RAM$7f9d00から256Byteに書き込まれ、ロングサブルーチンとして実行されます
    ・ツールを毎フレーム実行させるために、Intended RAM$7f8182から5バイトを拡張しています


5. 既知の問題
作者（倫葉）が把握しているバグについて説明します

    ・マップ上でCode Editorを閉じるとグラフィックがおかしくなります。一度コースに入ることで治ります

これ以外にバグを発見した場合は倫葉までご連絡ください


6. 注意事項

    ・このツールは任意コードを自由に実行できる環境を提供するものなので、65C816アセンブリをよく理解せずに使用するとクラッシュを引き起こす場合があります（でもそれも良い学びだと思います）
    ・Lunar Magicなどのツールを使用したり、他のパッチを当てると動作しなくなります


7. ライセンスについて

    ・ライセンスについて、licence.txtを必ず確認してください
    ・要点として、SMW_Built-in_ACE_Patch.asmの改変は基本的に自由ですが、以下の部分の改変は禁止しています（RTAにおける不正防止のため）
            a. org $009356以下1バイト（北米版はorg $0093c1以下1バイト）
            b. org $03e055内サブルーチンexecuteArbitraryCode以下5バイト（北米版はorg $03e05c内サブルーチンexecuteArbitraryCode以下5バイト）


8. Q&A 

    Q. コードの可読性が悪すぎます。プログラミングの勉強をしてから出直してきてください
    A. 倫葉はプログラマでもなければプログラミングも良く知りません（65C816以外知らないので）。ご自身で書き直して頂ければ幸いです

    Q. こんな機能があったらいいなと思うのですが？
    A. 下の連絡先までご連絡いただければ検討します。僕の技術力で対応できれば、ですが……

    Q. アセンブリ言語？は知らないけど任意コードを実行してみたい！
    A. sample.txtに書いてあるコードを試してみてください。楽しいと思いますよ！


9. 連絡先

    Twitter: @_tomoha__
    Discord: tomoha#8141


10. クレジット

    Code EditorのプログラムはSethBling氏とMally氏が制作したHex Editorのプログラムに倫葉が改変を加えたものを使用しています
    https://docs.google.com/document/d/1v_OOxPMX4ztkPQkqe3HeSpazmDA-ljRt7Mv2wd5JrKw/edit

    グラフィック表示やデバッグにおいてT.Tさんから大きなご助力をいただきました
    https://twitter.com/T_T_colony?s=20&t=S4ckalGtrLfSTiZ1AmERIw

    以上3名の方にこの場をお借りして感謝申し上げます